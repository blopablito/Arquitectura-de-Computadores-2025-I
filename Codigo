#include <iostream>
using namespace std;

void mostrarBinario(int valor, int bits) {
    for (int i = bits - 1; i >= 0; --i) {
        cout << ((valor >> i) & 1);
    }
}

void Algoritmo(int M, int Q, int n) {
    int A = 0;
    int Q_1 = 0;
    int contador = n;

    int mascara = (1 << n) - 1;

    if (M < 0) M = (1 << n) + M;
    if (Q < 0) Q = (1 << n) + Q;

    int negativoDeM = (~M + 1) & mascara;

    cout << "Estado inicial:\n";
    cout << "A: "; mostrarBinario(A, n);
    cout << "  Q: "; mostrarBinario(Q, n);
    cout << "  Q-1: " << Q_1 << "\n\n";

    while (contador-- > 0) {
        int Q0 = Q & 1;
        int combinacion = (Q0 << 1) | Q_1;

        if (combinacion == 0b10) {
            A = (A + negativoDeM) & mascara;
            cout << "A <- A - M\n";
        } else if (combinacion == 0b01) {
            A = (A + M) & mascara;
            cout << "A <- A + M\n";
        } else {
            cout << "Sin operaciÃ³n\n";
        }

        int combinado = (A << (n + 1)) | (Q << 1) | Q_1;
        combinado = combinado >> 1;

        Q_1 = combinado & 1;
        Q = (combinado >> 1) & mascara;
        A = (combinado >> (n + 1)) & mascara;

        cout << "A: "; mostrarBinario(A, n);
        cout << "  Q: "; mostrarBinario(Q, n);
        cout << "  Q-1: " << Q_1 << "  Contador: " << contador << "\n\n";
    }

    int resultado = (A << n) | Q;

    if ((resultado >> (2 * n - 1)) & 1) {
        resultado |= ~((1 << (2 * n)) - 1);
    }

    cout << "Resultado final en binario: ";
    mostrarBinario(resultado, 2 * n);
    cout << "\nResultado final en decimal: " << resultado << "\n";
}

int main() {
    int M, Q, n;
    cout << "Ingresa el multiplicando (M): ";
    cin >> M;
    cout << "Ingresa el multiplicador (Q): ";
    cin >> Q;
    cout << "Cantidad de bits (n): ";
    cin >> n;

    Algoritmo(M, Q, n);
    return 0;
}
